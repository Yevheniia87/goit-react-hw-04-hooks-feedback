{"version":3,"sources":["components/Statistics/statistics.module.css","components/Feedback/feedback.module.css","components/Section/section.module.css","components/Notification/notification.module.css","components/Section/Section.js","components/Feedback/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","FeedbackOptions","options","onLeaveFeedback","optionsItems","map","option","optionList","optionBtn","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","statisticsItems","Notification","message","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","keys","Math","round","countPositiveFeedbackPercentage","feedback","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,gBAAkB,sC,gBCAhFD,EAAOC,QAAU,CAAC,aAAe,+BAA+B,WAAa,6BAA6B,UAAY,8B,mBCAtHD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,qICelBC,MAZf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,qCACE,oBAAIC,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCgBQG,MApBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,oBAAIJ,UAAWC,IAAOI,aAAtB,SACGF,EAAQG,KAAI,SAACC,GAAD,OACX,oBAAiBP,UAAWC,IAAOO,WAAnC,SACE,wBACER,UAAWC,IAAOQ,UAClBC,QAAS,kBAAMN,EAAgBG,IAFjC,SAIGA,KALIA,S,gBCgBFI,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qBAAIhB,UAAWC,IAAOgB,WAAtB,UACE,qBAAIjB,UAAWC,IAAOiB,gBAAtB,oBAA+CN,KAC/C,qBAAIZ,UAAWC,IAAOiB,gBAAtB,uBAAkDL,KAClD,qBAAIb,UAAWC,IAAOiB,gBAAtB,kBAA6CJ,KAC7C,qBAAId,UAAWC,IAAOiB,gBAAtB,oBAA+CH,KAC/C,qBAAIf,UAAWC,IAAOiB,gBAAtB,gCACsBF,EADtB,W,gBCESG,MAVf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,mBAAGpB,UAAWC,IAAOoB,aAArB,SAAoCD,OCC3B,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOV,EAAP,KAAgBY,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOT,EAAP,KAAYY,EAAZ,KAoBMC,EAAqB,WACzB,OAAOf,EAAOC,EAAUC,GAMpBC,EAAQY,IACRxB,EAAUyB,OAAOC,KAAK,CAAEjB,OAAMC,UAASC,QACvCE,EANkC,WACtC,IAAMD,EAAQY,IACd,OAAOG,KAAKC,MAAOnB,EAAOG,EAAS,KAIViB,GAE3B,OACE,qCACE,cAAC,EAAD,CAASlC,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiBK,QAASA,EAASC,gBAhCjB,SAAC6B,GACvB,OAAQA,GACN,IAAK,OACHT,GAAQ,SAACU,GAAD,OAAeA,EAAY,KACnC,MAEF,IAAK,UACHT,GAAW,SAACS,GAAD,OAAeA,EAAY,KACtC,MAEF,IAAK,MACHR,GAAO,SAACQ,GAAD,OAAeA,EAAY,KAClC,MAEF,QACE,aAmBF,cAAC,EAAD,CAASpC,MAAO,aAAhB,SACa,IAAViB,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcI,QAAS,2BCnDjCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,W","file":"static/js/main.b2e00eff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__38-yO\",\"statisticsItems\":\"statistics_statisticsItems__2H4me\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsItems\":\"feedback_optionsItems__3tZ6R\",\"optionList\":\"feedback_optionList__3tewx\",\"optionBtn\":\"feedback_optionBtn__3JF9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"section_title__2d2bX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"notification_notification__1VXEw\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../Section/section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../Feedback/feedback.module.css\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={styles.optionsItems}>\n      {options.map((option) => (\n        <li key={option} className={styles.optionList}>\n          <button\n            className={styles.optionBtn}\n            onClick={() => onLeaveFeedback(option)}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../Statistics/statistics.module.css\";\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul className={styles.statistics}>\n      <li className={styles.statisticsItems}> Good: {good}</li>\n      <li className={styles.statisticsItems}> Neutral: {neutral}</li>\n      <li className={styles.statisticsItems}>Bad: {bad}</li>\n      <li className={styles.statisticsItems}>Total: {total}</li>\n      <li className={styles.statisticsItems}>\n        Positive feedback: {positivePercentage}%\n      </li>\n    </ul>\n  );\n}\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positive: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import React from \"react\";\nimport styles from \"../Notification/notification.module.css\";\nimport PropTypes from \"prop-types\";\nfunction Notification({ message }) {\n  return (\n    <>\n      <p className={styles.notification}>{message}</p>\n    </>\n  );\n}\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React from \"react\";\nimport Section from \"./components/Section/Section.js\";\nimport FeedbackOptions from \"./components/Feedback/FeedbackOptions.js\";\nimport Statistics from \"./components/Statistics/Statistics.js\";\nimport Notification from \"./components/Notification/Notification.js\";\nimport { useState } from \"react\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = (feedback) => {\n    switch (feedback) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return Math.round((good / total) * 100);\n  };\n  const total = countTotalFeedback();\n  const options = Object.keys({ good, neutral, bad });\n  const positivePercentage = countPositiveFeedbackPercentage();\n\n  return (\n    <>\n      <Section title={\"Please leave feedback\"}>\n        <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n      </Section>\n      <Section title={\"Statistics\"}>\n        {total !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <Notification message={\"No feedback given\"} />\n        )}\n      </Section>\n    </>\n  );\n}\n\n// class App extends React.Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n//   onLeaveFeedback = (feedback) => {\n//     this.setState((prevState) => ({\n//       [feedback]: prevState[feedback] + 1,\n//     }));\n//   };\n//   countTotalFeedback = () => {\n//     const { good, neutral, bad } = this.state;\n//     return good + neutral + bad;\n//   };\n//   countPositiveFeedbackPercentage = () => {\n//     const { good } = this.state;\n//     const total = this.countTotalFeedback();\n//     return Math.round((good / total) * 100);\n//   };\n//   render() {\n//     const options = Object.keys(this.state);\n//     const total = this.countTotalFeedback();\n//     const { good, neutral, bad } = this.state;\n//     const positivePercentage = this.countPositiveFeedbackPercentage();\n\n//     return (\n//       <>\n//         <Section title={\"Please leave feedback\"}>\n//           <FeedbackOptions\n//             options={options}\n//             onLeaveFeedback={this.onLeaveFeedback}\n//           />\n//         </Section>\n//         <Section title={\"Statistics\"}>\n//           {total !== 0 ? (\n//             <Statistics\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={total}\n//               positivePercentage={positivePercentage}\n//             />\n//           ) : (\n//             <Notification message={\"No feedback given\"} />\n//           )}\n//         </Section>\n//       </>\n//     );\n//   }\n// }\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}